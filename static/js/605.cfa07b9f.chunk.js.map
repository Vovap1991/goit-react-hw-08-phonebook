{"version":3,"file":"static/js/605.cfa07b9f.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Form/Form.styled.js","components/Form/Form.js","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/ContactsPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-content: center;\n  margin-top: 0;\n  gap: 10px;\n`;\n\nexport const ListItem = styled.li`\n  font-size: 25px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nexport const DeleteContactButton = styled.button`\n  cursor: pointer;\n  align-items: center;\n  justify-content: center;\n  outline: none;\n  width: 60px;\n  height: 30px;\n  margin: 0 0 0 10px;\n  border: 1px solid #5ac5e8;\n  font-size: 15px;\n  border-radius: 10px;\n  background-color: white;\n  transition: background-color 300ms linear, color 300ms linear;\n\n  &:is(:focus, :hover) {\n    color: white;\n    background-color: #358ff0;\n  }\n`;\n\nexport const NoContactsMessage = styled.div`\n  font-size: 25px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  ListItem,\n  DeleteContactButton,\n  List,\n  NoContactsMessage,\n} from './ContactList.styled';\nimport { deleteContact, fetchContacts } from '../../redux/operations';\nimport { selectVisibleContacts } from 'redux/selectors';\nimport { useEffect } from 'react';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  if (contacts.length === 0) {\n    return (\n      <NoContactsMessage>\n        Sorry! No contacts in your phonebook!\n      </NoContactsMessage>\n    );\n  }\n  return (\n    <List>\n      {contacts.map(contact => (\n        <ListItem key={contact.id}>\n          {contact.name}:{''} {contact.number}\n          <DeleteContactButton\n            onClick={() => {\n              dispatch(deleteContact(contact.id));\n            }}\n          >\n            Delete\n          </DeleteContactButton>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const FilterLabel = styled.label`\n  font-size: 25px;\n  margin-bottom: 15px;\n`;\n\nexport const FilterInput = styled.input`\n  padding: 10px;\n  outline: none;\n  width: 100%;\n  height: 20px;\n  border: 1px solid #5ac5e8;\n  font-size: 20px;\n  border-radius: 10px;\n  margin-bottom: 10px;\n  transition: border 300ms linear;\n\n  &:is(:focus, :hover) {\n    border: 2px solid #358ff0;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\nimport { FilterLabel, FilterWrapper, FilterInput } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  return (\n    <FilterWrapper>\n      <FilterLabel htmlFor=\"filter\">Find contacts by name</FilterLabel>\n      <FilterInput\n        type=\"text\"\n        placeholder=\"Type name...\"\n        value={filter}\n        onChange={event => {\n          dispatch(changeFilter(event.target.value));\n        }}\n      />\n    </FilterWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 60%;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 40px;\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 25px;\n  margin-bottom: 10px;\n  font-weight: 500;\n`;\n\nexport const FormInput = styled(Field)`\n  padding: 10px;\n  outline: none;\n  width: 75%;\n  height: 20px;\n  border: 1px solid #5ac5e8;\n  font-size: 20px;\n  border-radius: 10px;\n  margin-bottom: 10px;\n  transition: border 300ms linear;\n\n  &:is(:focus, :hover) {\n    border: 2px solid #358ff0;\n  }\n`;\n\nexport const FormButton = styled.button`\n  font-weight: 600;\n  margin-right: auto;\n  margin-left: auto;\n  cursor: pointer;\n  outline: none;\n  width: 150px;\n  height: 40px;\n  border: 1px solid #5ac5e8;\n  font-size: 20px;\n  border-radius: 10px;\n  margin-top: 20px;\n  margin-bottom: 10px;\n  background-color: white;\n  transition: background-color 300ms linear, color 300ms linear;\n\n  &:hover {\n    color: white;\n\n    background-color: #358ff0;\n  }\n`;\n\nexport const StyledErrorName = styled(ErrorMessage)`\n  color: red;\n`;\n\nexport const StyledErrorNumber = styled(ErrorMessage)`\n  color: red;\n`;\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  StyledForm,\n  FormInput,\n  FormLabel,\n  FormButton,\n  StyledErrorName,\n  StyledErrorNumber,\n} from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/operations';\nimport { selectContacts } from '../../redux/selectors';\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string().min(3, 'Too Short!').required('Required'),\n  number: Yup.number().min(6).required('Required'),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={SignupSchema}\n      onSubmit={(values, actions) => {\n        const enteredName = values.name;\n        const enteredNumber = values.number;\n\n        const isContactExists = contacts.find(\n          contact =>\n            contact.name.toLowerCase() === enteredName.toLowerCase() ||\n            contact.number === enteredNumber\n        );\n\n        if (isContactExists) {\n          return alert(`${enteredName} is already in your phonebook`);\n        }\n        dispatch(addContact({ id: nanoid(), ...values }));\n        actions.resetForm();\n      }}\n    >\n      <StyledForm>\n        <FormLabel htmlFor=\"name\">Name</FormLabel>\n        <FormInput type=\"text\" name=\"name\" placeholder=\"Ivan Ivanenko\" />\n        <StyledErrorName name=\"name\" component=\"div\" />\n\n        <FormLabel htmlFor=\"number\">Number</FormLabel>\n        <FormInput type=\"tel\" name=\"number\" placeholder=\"380631111111\" />\n        <StyledErrorNumber name=\"name\" component=\"div\" />\n        <FormButton type=\"submit\">Add contact</FormButton>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsPageContainer = styled.div`\n  margin: 0 auto;\n  width: 75%;\n  padding: 20px;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactForm } from 'components/Form/Form';\nimport { ContactsPageContainer } from './ContactsPage.styled';\n\nexport default function Contacts() {\n  return (\n    <ContactsPageContainer>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </ContactsPageContainer>\n  );\n}\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","ListItem","_templateObject2","DeleteContactButton","_templateObject3","NoContactsMessage","_templateObject4","ContactList","contacts","useSelector","selectVisibleContacts","dispatch","useDispatch","useEffect","fetchContacts","length","_jsx","children","map","contact","_jsxs","name","number","onClick","deleteContact","id","FilterWrapper","FilterLabel","FilterInput","Filter","filter","selectFilter","htmlFor","type","placeholder","value","onChange","event","changeFilter","target","StyledForm","Form","FormLabel","FormInput","Field","FormButton","StyledErrorName","ErrorMessage","_templateObject5","StyledErrorNumber","_templateObject6","SignupSchema","Yup","shape","min","required","ContactForm","selectContacts","Formik","initialValues","validationSchema","onSubmit","values","actions","enteredName","enteredNumber","find","toLowerCase","alert","concat","addContact","_objectSpread","nanoid","resetForm","component","ContactsPageContainer","Contacts"],"sourceRoot":""}