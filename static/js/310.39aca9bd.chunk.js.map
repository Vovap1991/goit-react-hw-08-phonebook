{"version":3,"file":"static/js/310.39aca9bd.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","redux/filterSlice.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Form/Form.styled.js","components/Form/Form.jsx","pages/ContactsPage/ContactsPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-content: center;\n  margin-top: 0;\n  gap: 10px;\n`;\n\nexport const ListItem = styled.li`\n  font-size: 25px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nexport const DeleteContactButton = styled.button`\n  cursor: pointer;\n  align-items: center;\n  justify-content: center;\n  outline: none;\n  width: 60px;\n  height: 30px;\n  margin: 0 0 0 10px;\n  border: 1px solid #5ac5e8;\n  font-size: 15px;\n  border-radius: 10px;\n  background-color: white;\n  transition: background-color 300ms linear, color 300ms linear;\n\n  &:is(:focus, :hover) {\n    color: white;\n    background-color: #358ff0;\n  }\n`;\n\nexport const NoContactsMessage = styled.div`\n  font-size: 25px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  ListItem,\n  DeleteContactButton,\n  List,\n  NoContactsMessage,\n} from './ContactList.styled';\nimport { deleteContact } from '../../redux/operations';\nimport { selectVisibleContacts } from '../../redux/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  if (contacts.length === 0) {\n    return (\n      <NoContactsMessage>\n        Sorry! No contacts in your phonebook!\n      </NoContactsMessage>\n    );\n  }\n  return (\n    <List>\n      {contacts.map(contact => (\n        <ListItem key={contact.id}>\n          {contact.name}:{''} {contact.number}\n          <DeleteContactButton\n            onClick={() => {\n              dispatch(deleteContact(contact.id));\n            }}\n          >\n            Delete\n          </DeleteContactButton>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","const { createSlice } = require('@reduxjs/toolkit');\n\nconst initialFilterValue = '';\n\nexport const slice = createSlice({\n  name: 'filter',\n  initialState: initialFilterValue,\n  reducers: {\n    changeFilter(state, action) {\n      return action.payload;\n    },\n  },\n});\n\nexport const filterReducer = slice.reducer;\nexport const { changeFilter } = slice.actions;\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const FilterLabel = styled.label`\n  font-size: 25px;\n  margin-bottom: 10px;\n`;\n\nexport const FilterInput = styled.input`\n  padding: 10px;\n  outline: none;\n  width: 100%;\n  height: 20px;\n  border: 1px solid #5ac5e8;\n  font-size: 20px;\n  border-radius: 10px;\n  margin-bottom: 10px;\n  transition: border 300ms linear;\n\n  &:is(:focus, :hover) {\n    border: 2px solid #358ff0;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\nimport { FilterLabel, FilterWrapper, FilterInput } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  return (\n    <FilterWrapper>\n      <FilterLabel htmlFor=\"filter\">Find contacts by name</FilterLabel>\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        placeholder=\"Type name...\"\n        value={filter}\n        onChange={event => {\n          dispatch(changeFilter(event.target.value));\n        }}\n      />\n    </FilterWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 25px;\n  margin-bottom: 10px;\n`;\n\nexport const FormInput = styled(Field)`\n  padding: 10px;\n  outline: none;\n  width: 100%;\n  height: 20px;\n  border: 1px solid #5ac5e8;\n  font-size: 20px;\n  border-radius: 10px;\n  margin-bottom: 10px;\n  transition: border 300ms linear;\n\n  &:is(:focus, :hover) {\n    border: 2px solid #358ff0;\n  }\n`;\n\nexport const FormButton = styled.button`\n  font-weight: 600;\n  margin-right: auto;\n  margin-left: auto;\n  cursor: pointer;\n  outline: none;\n  width: 70%;\n  height: 30px;\n  border: 1px solid #5ac5e8;\n  font-size: 15px;\n  border-radius: 10px;\n  margin-top: 40px;\n  margin-bottom: 10px;\n  background-color: white;\n  transition: background-color 300ms linear, color 300ms linear;\n\n  &:hover {\n    color: white;\n\n    background-color: #358ff0;\n  }\n`;\n\nexport const StyledErrorName = styled(ErrorMessage)`\n  color: red;\n`;\n\nexport const StyledErrorNumber = styled(ErrorMessage)`\n  color: red;\n`;\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  StyledForm,\n  FormInput,\n  FormLabel,\n  FormButton,\n  StyledErrorName,\n  StyledErrorNumber,\n} from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/operations';\nimport { selectContacts } from '../../redux/selectors';\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string().min(3, 'Too Short!').required('Required'),\n  number: Yup.number().min(6).required('Required'),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={SignupSchema}\n      onSubmit={(values, actions) => {\n        const enteredName = values.name;\n        const enteredNumber = values.number;\n\n        const isContactExists = contacts.find(\n          contact =>\n            contact.name.toLowerCase() === enteredName.toLowerCase() ||\n            contact.number === enteredNumber\n        );\n\n        if (isContactExists) {\n          return alert(`${enteredName} is already in your phonebook`);\n        }\n        dispatch(addContact({ id: nanoid(), ...values }));\n        actions.resetForm();\n      }}\n    >\n      <StyledForm>\n        <FormLabel htmlFor=\"name\">Name</FormLabel>\n        <FormInput type=\"text\" name=\"name\" placeholder=\"Ivan Ivanenko\" />\n        <StyledErrorName name=\"name\" component=\"div\" />\n\n        <FormLabel htmlFor=\"number\">Number</FormLabel>\n        <FormInput type=\"tel\" name=\"number\" placeholder=\"380631111111\" />\n        <StyledErrorNumber name=\"name\" component=\"div\" />\n        <FormButton type=\"submit\">Add contact</FormButton>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactForm } from 'components/Form/Form';\n\nexport default function Contacts() {\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","ListItem","_templateObject2","DeleteContactButton","_templateObject3","NoContactsMessage","_templateObject4","ContactList","contacts","useSelector","selectVisibleContacts","dispatch","useDispatch","length","_jsx","children","map","contact","_jsxs","name","number","onClick","deleteContact","id","slice","createSlice","require","initialState","reducers","changeFilter","state","action","payload","reducer","actions","FilterWrapper","FilterLabel","FilterInput","Filter","filter","selectFilter","htmlFor","type","pattern","title","required","placeholder","value","onChange","event","target","StyledForm","Form","FormLabel","FormInput","Field","FormButton","StyledErrorName","ErrorMessage","_templateObject5","StyledErrorNumber","_templateObject6","SignupSchema","Yup","shape","min","ContactForm","selectContacts","Formik","initialValues","validationSchema","onSubmit","values","enteredName","enteredNumber","find","toLowerCase","alert","concat","addContact","_objectSpread","nanoid","resetForm","component","Contacts"],"sourceRoot":""}